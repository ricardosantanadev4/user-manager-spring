spring.application.name=usermanager

spring.profiles.active=dev

server.servlet.context-path=/api

# Propriedade para evitar que o trace apareça na resposta
server.error.include-stacktrace=never


# Personalizando comportamento da UI do Swagger

springdoc.swagger-ui.path=/swagger-ui

# Habilitar botão "Try it out" automaticamente
springdoc.swagger-ui.tryItOutEnabled=true

# Fecha automaticamente todas as sessões no Swagger
springdoc.swagger-ui.doc-expansion=none

# Organiza os endpoints por ordem alfabética dos métodos HTTP
springdoc.swagger-ui.operationsSorter=method

# # Configuração para ambiente local.
# # Caminho para as chaves pública e privada usadas na autenticação JWT dentro da pasta resources
# jwt.public.key=classpath:app.pub
# jwt.private.key=classpath:app.key

# Configuração para ambiente de hospedagem
# Chave pública ainda pode ser lida do classpath
jwt.public.key=classpath:app.pub

# Chave privada agora vem de uma variável de ambiente
jwt.private.key=${JWT_PRIVATE_KEY}

# Configurações do spring-boot actuator
# sempre mostrar os detalhes da aplicação
management.endpoint.health.show-details=always

# Exibir todos os endpoints web
management.endpoints.web.exposure.include=*

# Configuração configuração de conexão com spring-boot admin em ambiente local
# # Configuração para registrar esta API no Spring Boot Admin
# spring.boot.admin.client.url=http://localhost:8081

# Configuração conexão com spring-boot admin no ambiente de hospegem
# Aponta para o servidor Spring Boot Admin
spring.boot.admin.client.url=https://sring-boot-admin-production.up.railway.app

# Aponta para o serviço que está sendo monitorado
spring.boot.admin.client.instance.service-url=https://user-manager-spring-production.up.railway.app/api
